[{"/Users/luis/Desktop/carnaProject/carna-project/client/src/index.js":"1","/Users/luis/Desktop/carnaProject/carna-project/client/src/App.js":"2","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js":"3","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ProtectedRoute.js":"4","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/DeleteUser.js":"5","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/Main.js":"6","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/GetUsers.js":"7","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/SignIn.js":"8","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/ModifyUser.js":"9","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AddCourses.js":"10","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AddUser.js":"11","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AssignGroups.js":"12","/Users/luis/Desktop/carnaProject/carna-project/client/src/services/UserServices.js":"13","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ActionLayout.js":"14","/Users/luis/Desktop/carnaProject/carna-project/client/src/services/ApiClient.js":"15","/Users/luis/Desktop/carnaProject/carna-project/client/src/helpers/States.js":"16","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ModifyModal.js":"17","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ModifyForm.js":"18"},{"size":291,"mtime":1620785781299,"results":"19","hashOfConfig":"20"},{"size":169,"mtime":1620785799186,"results":"21","hashOfConfig":"20"},{"size":4440,"mtime":1620786254125,"results":"22","hashOfConfig":"20"},{"size":354,"mtime":1620783024487,"results":"23","hashOfConfig":"20"},{"size":2912,"mtime":1620862625683,"results":"24","hashOfConfig":"20"},{"size":4891,"mtime":1620785884104,"results":"25","hashOfConfig":"20"},{"size":1152,"mtime":1620845559845,"results":"26","hashOfConfig":"20"},{"size":3833,"mtime":1620781622843,"results":"27","hashOfConfig":"20"},{"size":2604,"mtime":1620862479233,"results":"28","hashOfConfig":"20"},{"size":3540,"mtime":1620778166704,"results":"29","hashOfConfig":"20"},{"size":5545,"mtime":1620862999122,"results":"30","hashOfConfig":"20"},{"size":3544,"mtime":1620778142215,"results":"31","hashOfConfig":"20"},{"size":1922,"mtime":1620862295879,"results":"32","hashOfConfig":"20"},{"size":2314,"mtime":1620787441391,"results":"33","hashOfConfig":"20"},{"size":449,"mtime":1620697957946,"results":"34","hashOfConfig":"20"},{"size":2831,"mtime":1620768537690,"results":"35","hashOfConfig":"20"},{"size":582,"mtime":1620849577168,"results":"36","hashOfConfig":"20"},{"size":5098,"mtime":1620862872176,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"rxha0w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/luis/Desktop/carnaProject/carna-project/client/src/index.js",[],["84","85"],"/Users/luis/Desktop/carnaProject/carna-project/client/src/App.js",[],"/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js",["86","87"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, Switch, Route, withRouter } from 'react-router-dom';\n//Pages\nimport SignIn from '../Pages/SignIn';\nimport Main from '../Pages/Main';\nimport AddUser from '../Pages/AddUser';\nimport DeleteUser from '../Pages/DeleteUser';\nimport ModifyUser from '../Pages/ModifyUser';\nimport GetUsers from '../Pages/GetUsers';\nimport AssignGroups from '../Pages/AssignGroups';\nimport AddCourses from '../Pages/AddCourses';\n\nimport ProtectedRoute from './ProtectedRoute';\nimport { __CheckSession } from '../services/UserServices';\n\n\nconst Router = (props) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [pageLoading, setPageLoading] = useState(true);\n    let history = useHistory();\n\n    // verify if the current token is valid \n\n    const verifyTokenValid = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            try {\n                const session = await __CheckSession();\n                console.log('after session: ', session);\n                setCurrentUser(session);\n                setAuthenticated(true);\n                history.push('/main');\n            } catch (error) {\n                setCurrentUser(null)\n                setAuthenticated(false);\n                localStorage.clear();\n            }\n        }\n    }\n\n    const toggleAuthenticated = async (value, user, done) => {\n        setAuthenticated(value);\n        setCurrentUser(user);\n        done();\n    }\n\n    useEffect(() => {\n        // verifyTokenValid();\n        setPageLoading(false);\n    })\n\n    return (\n        <div className=\"main\">\n            {pageLoading ? (\n                <h3>Loading...</h3>\n            ) : (\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        component={() => (\n                            <SignIn\n                                toggleAuthenticated={toggleAuthenticated}\n                                {...props}\n                            />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main\"\n                        component={(props) => (\n                            <Main {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/add-users\"\n                        component={(props) => (\n                            <AddUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/remove-users\"\n                        component={(props) => (\n                            <DeleteUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/modify-users\"\n                        component={(props) => (\n                            <ModifyUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/get-all\"\n                        component={(props) => (\n                            <GetUsers {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/assign-group\"\n                        component={(props) => (\n                            <AssignGroups {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/add-courses\"\n                        component={(props) => (\n                            <AddCourses {...props} currentUser={currentUser} />\n                        )}\n                    />\n                </Switch>\n            )}\n        </div>\n    )\n}\n\nexport default withRouter(Router);","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ProtectedRoute.js",["88","89"],"import React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default ({ authenticated, children, component: Component, ...rest }) =>\n    authenticated === true ? (\n        <Route {...rest} component={Component}>\n            {console.log(authenticated)}\n        </Route>\n    ) : (\n        <Redirect to=\"/\" />\n    )","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/DeleteUser.js",["90"],"/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/Main.js",["91","92"],"import React, { useState } from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport ActionLayout from '../components/ActionLayout';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport { __Logout } from '../services/UserServices'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst Main = (props) => {\n    const classes = useStyles();\n    //state\n    const [open, setOpen] = useState(true);\n\n    // opens drawer\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    }\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n\n    const handleLogout = (e) => {\n         __Logout();\n        props.history.push('/')\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Dashboard\n                    </Typography>\n                    <IconButton color=\"inherit\">\n                        <Badge color=\"secondary\">\n                            <ExitToAppOutlinedIcon onClick={handleLogout}/>\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={8} lg={9}>\n                            <ActionLayout {...props}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </main>\n        </div>\n    )\n}\n\nexport default Main;","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/GetUsers.js",["93"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { __GetAllUsers } from '../services/UserServices';\n\n// services\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        border: '1px solid red',\n        height: '100vh',\n        width: '100vw',\n        textAlign: 'center',\n    },\n}))\n\n\nconst GetUsers = () => {\n    const classes = useStyles();\n    // states that are going to be used\n    const [users, setUsers] = useState([]);\n\n    // load users\n    useEffect(async () => {\n        // console.log('loads first: ');\n        try {\n            const data = await __GetAllUsers();\n            setUsers(data);\n        } catch (error) {\n            throw error\n        }\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <h1>All Users</h1>\n            <div style={{color: 'black'}}>\n                {console.log('users: ', users)}\n                {users.map(user => (\n                    <h3>{user.firstName} {user.lastName}, {user.role}, {user.city}, {user.state}</h3>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default GetUsers;","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/SignIn.js",["94"],"import React, { useState } from 'react';\n//material UI components\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlined from '@material-ui/icons/LockOpenOutlined';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\n\nimport { __LoginUser } from '../services/UserServices';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    }\n}));\n\nfunction SignIn(props) {\n    const classes = useStyles();\n\n    // State\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [formError, setFormError] = useState(false);\n\n    // console.log('props: ', props);\n\n    // functions \n    const handleChange = (e) => {\n        e.preventDefault();\n\n        switch (e.target.id) {\n            case \"username\":\n                setUsername(e.target.value);\n                break;\n            case \"password\":\n                setPassword(e.target.value);\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const user = { username, password };\n        try {\n            const loginData = await __LoginUser(user);\n            props.toggleAuthenticated(true, loginData.user, () =>\n                props.history.push('/main')\n            )\n        } catch (error) {\n            setFormError(true);\n        }\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign In\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoFocus\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handleChange}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    {/* {formError ? <p>Error While  Loggin In</p> : <p></p>} */}\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default SignIn","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/ModifyUser.js",["95","96"],"/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AddCourses.js",["97","98"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport states from '../helpers/States'\n\n// services\nimport {__RegisterUser} from '../services/UserServices'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ' & .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        }\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: 'green',\n    }\n}))\n\n\nconst AddCourses = () => {\n    const classes = useStyles();\n    // states that are going to be used\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [username, setUsername] = useState('');\n    const [state, setState] = useState('');\n    const [city, setCity] = useState('');\n\n    // handle functions\n    const handleChange = (e) => {\n        e.preventDefault();\n\n        console.log('outside switch: ', console.log(e.target.value));\n        switch (e.target.id) {\n            case \"firstName\":\n                setFirstName(e.target.value);\n                break;\n            case \"lastName\":\n                setLastName(e.target.value);\n                break;\n            case \"username\":\n                setUsername(e.target.value);\n                break;\n            case \"city\":\n                setCity(e.target.value);\n            default:\n                setState(e.target.value);\n                break;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let formData = { firstName, lastName, username, state, city };\n        // console.log('button pressed')\n        // console.log(\"current state: \", state)\n        try {\n            const loginData = __RegisterUser(formData);\n\n        } catch(error) {\n            throw error \n        }\n    }\n\n    return (\n        <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\n            {console.log('this is the state: ', { firstName, lastName, username, state, city })}\n            <div>\n                <TextField id=\"firstName\" label=\"First Name\" onChange={handleChange} />\n                <TextField id=\"lastName\" label=\"Last Name\" onChange={handleChange} />\n                <TextField id=\"username\" label=\"Username\" onChange={handleChange} />\n                <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\n                <Select\n                    id=\"state-select\"\n                    value={state}\n                    onChange={handleChange}\n                >\n                    {states.map((stateName) => (\n                        <MenuItem key={stateName.value} value={stateName.value}>\n                            {stateName.label}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <TextField id=\"city\" label=\"city\" onChange={handleChange} />\n                {/* <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"\" */}\n            </div>\n            <Button type=\"submit\" className={classes.submit}>Submit</Button>\n        </form>\n    )\n}\n\nexport default AddCourses;","/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AddUser.js",["99","100","101","102"],"/Users/luis/Desktop/carnaProject/carna-project/client/src/Pages/AssignGroups.js",["103","104"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport states from '../helpers/States'\n\n// services\nimport {__RegisterUser} from '../services/UserServices'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ' & .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        }\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: 'green',\n    }\n}))\n\n\nconst AssignGroups = () => {\n    const classes = useStyles();\n    // states that are going to be used\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [username, setUsername] = useState('');\n    const [state, setState] = useState('');\n    const [city, setCity] = useState('');\n\n    // handle functions\n    const handleChange = (e) => {\n        e.preventDefault();\n\n        console.log('outside switch: ', console.log(e.target.value));\n        switch (e.target.id) {\n            case \"firstName\":\n                setFirstName(e.target.value);\n                break;\n            case \"lastName\":\n                setLastName(e.target.value);\n                break;\n            case \"username\":\n                setUsername(e.target.value);\n                break;\n            case \"city\":\n                setCity(e.target.value);\n            default:\n                setState(e.target.value);\n                break;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let formData = { firstName, lastName, username, state, city };\n        // console.log('button pressed')\n        // console.log(\"current state: \", state)\n        try {\n            const loginData = __RegisterUser(formData);\n\n        } catch(error) {\n            throw error \n        }\n    }\n\n    return (\n        <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\n            {console.log('this is the state: ', { firstName, lastName, username, state, city })}\n            <div>\n                <TextField id=\"firstName\" label=\"First Name\" onChange={handleChange} />\n                <TextField id=\"lastName\" label=\"Last Name\" onChange={handleChange} />\n                <TextField id=\"username\" label=\"Username\" onChange={handleChange} />\n                <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\n                <Select\n                    id=\"state-select\"\n                    value={state}\n                    onChange={handleChange}\n                >\n                    {states.map((stateName) => (\n                        <MenuItem key={stateName.value} value={stateName.value}>\n                            {stateName.label}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <TextField id=\"city\" label=\"city\" onChange={handleChange} />\n                {/* <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"First Name\" />\n                <TextField id=\"standard-basic\" label=\"\" */}\n            </div>\n            <Button type=\"submit\" className={classes.submit}>Submit</Button>\n        </form>\n    )\n}\n\nexport default AssignGroups;","/Users/luis/Desktop/carnaProject/carna-project/client/src/services/UserServices.js",[],"/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ActionLayout.js",[],"/Users/luis/Desktop/carnaProject/carna-project/client/src/services/ApiClient.js",[],"/Users/luis/Desktop/carnaProject/carna-project/client/src/helpers/States.js",["105"],"// Label for state abbreviations\nexport default [\n    {\n        value: 'AL',\n        label: 'AL'\n    },\n    {\n        value: 'AK',\n        label: 'AK',\n    },\n    {\n        value: 'AZ',\n        label: 'AZ'\n    },\n    {\n        value: 'AR',\n        label: 'AR'\n    },\n    {\n        value: 'CA',\n        label: 'CA',\n    },\n    {\n        value: 'CO',\n        label: 'CO',\n    },\n    {\n        value: 'CT',\n        label: 'CT'\n    },\n    {\n        value: 'DE',\n        label: 'DE'\n    },\n    {\n        value: 'DC',\n        label: 'DC',\n    },\n    {\n        value: 'FL',\n        label: 'FL',\n    },\n    {\n        value: 'GA',\n        label: 'GA'\n    },\n    {\n        value: 'HI',\n        label: 'HI'\n    },\n    {\n        value: 'ID',\n        label: 'ID',\n    },\n    {\n        value: 'IL',\n        label: 'IL',\n    },\n    {\n        value: 'IN',\n        label: 'IN'\n    },\n    {\n        value: 'IA',\n        label: 'IA'\n    },\n    {\n        value: 'KS',\n        label: 'KS',\n    },\n    {\n        value: 'KY',\n        label: 'KY',\n    },\n    {\n        value: 'LA',\n        label: 'LA'\n    },\n    {\n        value: 'ME',\n        label: 'ME'\n    },\n    {\n        value: 'MD',\n        label: 'MD',\n    },\n    {\n        value: 'MA',\n        label: 'MA',\n    },\n    {\n        value: 'MI',\n        label: 'MI'\n    },\n    {\n        value: 'MN',\n        label: 'MN'\n    },\n    {\n        value: 'MS',\n        label: 'MS',\n    },\n    {\n        value: 'MO',\n        label: 'MO',\n    },\n    {\n        value: 'MT',\n        label: 'MT'\n    },\n    {\n        value: 'NE',\n        label: 'NE'\n    },\n    {\n        value: 'NV',\n        label: 'NV',\n    },\n    {\n        value: 'NH',\n        label: 'NH',\n    },\n    {\n        value: 'NJ',\n        label: 'NJ'\n    },\n    {\n        value: 'NM',\n        label: 'NM',\n    },\n    {\n        value: 'NY',\n        label: 'NY',\n    },\n    {\n        value: 'NC',\n        label: 'NC'\n    },\n    {\n        value: 'ND',\n        label: 'ND'\n    },\n    {\n        value: 'OH',\n        label: 'OH',\n    },\n    {\n        value: 'OK',\n        label: 'OK',\n    },\n    {\n        value: 'OR',\n        label: 'OR'\n    },\n    {\n        value: 'PA',\n        label: 'PA',\n    },\n    {\n        value: 'RI',\n        label: 'RI'\n    },\n    {\n        value: 'SC',\n        label: 'SC',\n    },\n    {\n        value: 'SD',\n        label: 'SD',\n    },\n    {\n        value: 'TN',\n        label: 'TN'\n    },\n    {\n        value: 'TX',\n        label: 'TX'\n    },\n    {\n        value: 'UT',\n        label: 'UT',\n    },\n    {\n        value: 'VT',\n        label: 'VT',\n    },\n    {\n        value: 'VA',\n        label: 'VA'\n    },\n    {\n        value: 'WA',\n        label: 'WA'\n    },\n    {\n        value: 'WV',\n        label: 'WV'\n    },\n    {\n        value: 'WI',\n        label: 'WI',\n    },\n    {\n        value: 'WY',\n        label: 'WY',\n    },\n]","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ModifyModal.js",["106"],"import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport ModifyForm from './ModifyForm';\n\nconst ModifyModal = (props) => {\n    // state of modal\n    const [open, setOpen] = useState(true);\n\n    const openModal = () => {\n        setOpen(true);\n    }\n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Modal\n                isOpen={open}\n                onRequestClose={closeModal}\n            >\n                <ModifyForm {...props} />\n            </Modal>\n        </div>\n    )\n}\nexport default ModifyModal;","/Users/luis/Desktop/carnaProject/carna-project/client/src/components/ModifyForm.js",["107","108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":25,"column":11,"nodeType":"116","messageId":"117","endLine":25,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":48,"column":5,"nodeType":"116","endLine":48,"endColumn":14,"suggestions":"120"},{"ruleId":"114","severity":1,"message":"121","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":4,"column":1,"nodeType":"124","endLine":11,"endColumn":6},{"ruleId":"114","severity":1,"message":"125","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":24},{"ruleId":"114","severity":1,"message":"126","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":109,"column":11,"nodeType":"116","messageId":"117","endLine":109,"endColumn":28},{"ruleId":"118","severity":1,"message":"128","line":24,"column":15,"nodeType":"129","endLine":32,"endColumn":6},{"ruleId":"114","severity":1,"message":"130","line":43,"column":12,"nodeType":"116","messageId":"117","endLine":43,"endColumn":21},{"ruleId":"114","severity":1,"message":"131","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"132","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":54,"column":13,"nodeType":"135","messageId":"136","endLine":56,"endColumn":23},{"ruleId":"114","severity":1,"message":"137","line":66,"column":19,"nodeType":"116","messageId":"117","endLine":66,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":21,"column":13,"nodeType":"140","messageId":"141","endLine":21,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":42,"column":9,"nodeType":"140","messageId":"141","endLine":42,"endColumn":15},{"ruleId":"133","severity":1,"message":"142","line":76,"column":13,"nodeType":"135","messageId":"143","endLine":77,"endColumn":45},{"ruleId":"133","severity":1,"message":"134","line":78,"column":13,"nodeType":"135","messageId":"136","endLine":79,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":54,"column":13,"nodeType":"135","messageId":"136","endLine":56,"endColumn":23},{"ruleId":"114","severity":1,"message":"137","line":66,"column":19,"nodeType":"116","messageId":"117","endLine":66,"endColumn":28},{"ruleId":"122","severity":1,"message":"144","line":2,"column":1,"nodeType":"124","endLine":207,"endColumn":2},{"ruleId":"114","severity":1,"message":"145","line":9,"column":11,"nodeType":"116","messageId":"117","endLine":9,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":19,"column":13,"nodeType":"140","messageId":"141","endLine":19,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":40,"column":9,"nodeType":"140","messageId":"141","endLine":40,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":72,"column":13,"nodeType":"135","messageId":"136","endLine":73,"endColumn":23},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'verifyTokenValid' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPageLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["148"],"'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'__RegisterUser' is defined but never used.","'NotificationsIcon' is defined but never used.","'handleDrawerClose' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'formError' is assigned a value but never used.","'Button' is defined but never used.","'__ModifyUser' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'loginData' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","Expected a 'break' statement before 'case'.","case","Assign array to a variable before exporting as module default","'openModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Add dependencies array: []",{"range":"151","text":"152"},[1654,1654],", []"]