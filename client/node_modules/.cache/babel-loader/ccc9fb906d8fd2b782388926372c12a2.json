{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Switch, Route, withRouter } from 'react-router-dom'; //Pages\n\nimport SignIn from '../Pages/SignIn';\nimport Main from '../Pages/Main';\nimport AddUser from '../Pages/AddUser';\nimport DeleteUser from './Pages/DeleteUser';\nimport ModifyUser from './Pages/ModifyUser';\nimport GetUsers from './Pages/GetUsers';\nimport AssignGroups from './Pages/AssignGroups';\nimport AddCourses from './Pages/AddCourses';\nimport ProtectedRoute from './ProtectedRoute';\nimport { __CheckSession } from '../services/UserServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  let history = useHistory(); // verify if the current token is valid \n\n  const verifyTokenValid = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      try {\n        const session = await __CheckSession();\n        console.log('after session: ', session);\n        setCurrentUser(session);\n        setAuthenticated(true);\n        history.push('/main');\n      } catch (error) {\n        setCurrentUser(null);\n        setAuthenticated(false);\n        localStorage.clear();\n      }\n    }\n  };\n\n  const toggleAuthenticated = async (value, user, done) => {\n    setAuthenticated(value);\n    setCurrentUser(user);\n    done();\n  };\n\n  useEffect(() => {\n    verifyTokenValid();\n    setPageLoading(false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: pageLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main\",\n        component: props => /*#__PURE__*/_jsxDEV(Main, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main/add-users\",\n        component: props => /*#__PURE__*/_jsxDEV(AddUser, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/remove-users\",\n        component: props => /*#__PURE__*/_jsxDEV(DeleteUser, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main/modify-users\",\n        component: props => /*#__PURE__*/_jsxDEV(ModifyUser, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/get-all\",\n        component: props => /*#__PURE__*/_jsxDEV(GetUsers, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main/assign-group\",\n        component: props => /*#__PURE__*/_jsxDEV(AssignGroups, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main/add-courses\",\n        component: props => /*#__PURE__*/_jsxDEV(AddCourses, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"pt0GkeXO9R+kZilzN5TQ8WT8wDk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Router;\nexport default _c2 = withRouter(Router);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js"],"names":["React","useState","useEffect","useHistory","Switch","Route","withRouter","SignIn","Main","AddUser","DeleteUser","ModifyUser","GetUsers","AssignGroups","AddCourses","ProtectedRoute","__CheckSession","Router","currentUser","setCurrentUser","authenticated","setAuthenticated","pageLoading","setPageLoading","history","verifyTokenValid","token","localStorage","getItem","session","console","log","push","error","clear","toggleAuthenticated","value","user","done","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,UAApC,QAAsD,kBAAtD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,IAAD,CAA9C;AACA,MAAIuB,OAAO,GAAGrB,UAAU,EAAxB,CAJiB,CAMjB;;AAEA,QAAMsB,gBAAgB,GAAG,YAAY;AACjC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACP,UAAI;AACA,cAAMG,OAAO,GAAG,MAAMb,cAAc,EAApC;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,OAA/B;AACAV,QAAAA,cAAc,CAACU,OAAD,CAAd;AACAR,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAG,QAAAA,OAAO,CAACQ,IAAR,CAAa,OAAb;AACH,OAND,CAME,OAAOC,KAAP,EAAc;AACZd,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAM,QAAAA,YAAY,CAACO,KAAb;AACH;AACJ;AACJ,GAfD;;AAiBA,QAAMC,mBAAmB,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,KAA6B;AACrDjB,IAAAA,gBAAgB,CAACe,KAAD,CAAhB;AACAjB,IAAAA,cAAc,CAACkB,IAAD,CAAd;AACAC,IAAAA,IAAI;AACP,GAJD;;AAMApC,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,gBAAgB;AAChBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAHQ,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKD,WAAW,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAC,GAFT;AAGI,QAAA,SAAS,EAAE,mBACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEF,aADnB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,IAAD,OAAUA,KAAV;AAAiB,UAAA,WAAW,EAAErB;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,OAAD,OAAaA,KAAb;AAAoB,UAAA,WAAW,EAAErB;AAAjC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,eAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,UAAA,WAAW,EAAErB;AAApC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA6BI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,oBAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,UAAA,WAAW,EAAErB;AAApC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cA7BJ,eAoCI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,QAAD,OAAcA,KAAd;AAAqB,UAAA,WAAW,EAAErB;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cApCJ,eA2CI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,oBAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,YAAD,OAAkBA,KAAlB;AAAyB,UAAA,WAAW,EAAErB;AAAtC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cA3CJ,eAkDI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEE,aADnB;AAEI,QAAA,IAAI,EAAC,mBAFT;AAGI,QAAA,SAAS,EAAGmB,KAAD,iBACP,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,UAAA,WAAW,EAAErB;AAApC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH,CAtGD;;GAAMD,M;UAIYd,U;;;KAJZc,M;AAwGN,qBAAeX,UAAU,CAACW,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, Switch, Route, withRouter } from 'react-router-dom';\n//Pages\nimport SignIn from '../Pages/SignIn';\nimport Main from '../Pages/Main';\nimport AddUser from '../Pages/AddUser';\nimport DeleteUser from './Pages/DeleteUser';\nimport ModifyUser from './Pages/ModifyUser';\nimport GetUsers from './Pages/GetUsers';\nimport AssignGroups from './Pages/AssignGroups';\nimport AddCourses from './Pages/AddCourses';\n\nimport ProtectedRoute from './ProtectedRoute';\nimport { __CheckSession } from '../services/UserServices';\n\n\nconst Router = () => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [pageLoading, setPageLoading] = useState(true);\n    let history = useHistory();\n\n    // verify if the current token is valid \n\n    const verifyTokenValid = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            try {\n                const session = await __CheckSession();\n                console.log('after session: ', session);\n                setCurrentUser(session);\n                setAuthenticated(true);\n                history.push('/main');\n            } catch (error) {\n                setCurrentUser(null)\n                setAuthenticated(false);\n                localStorage.clear();\n            }\n        }\n    }\n\n    const toggleAuthenticated = async (value, user, done) => {\n        setAuthenticated(value);\n        setCurrentUser(user);\n        done();\n    }\n\n    useEffect(() => {\n        verifyTokenValid();\n        setPageLoading(false);\n    })\n\n    return (\n        <div className=\"main\">\n            {pageLoading ? (\n                <h3>Loading...</h3>\n            ) : (\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        component={() => (\n                            <SignIn />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main\"\n                        component={(props) => (\n                            <Main {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main/add-users\"\n                        component={(props) => (\n                            <AddUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/remove-users\"\n                        component={(props) => (\n                            <DeleteUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main/modify-users\"\n                        component={(props) => (\n                            <ModifyUser {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/get-all\"\n                        component={(props) => (\n                            <GetUsers {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main/assign-group\"\n                        component={(props) => (\n                            <AssignGroups {...props} currentUser={currentUser} />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main/add-courses\"\n                        component={(props) => (\n                            <AddCourses {...props} currentUser={currentUser} />\n                        )}\n                    />\n                </Switch>\n            )}\n        </div>\n    )\n}\n\nexport default withRouter(Router);"]},"metadata":{},"sourceType":"module"}