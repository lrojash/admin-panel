{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SignIn from '../Pages/SignIn';\nimport Main from '../Pages/Main';\nimport ProtectedRoute from './ProtectedRoute';\nimport { __CheckSession } from '../services/UserServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authenticated, setAuthenticated] = useState('');\n  const [pageLoading, setPageLoading] = useState(false); // verify if the current token is valid \n\n  const verifyTokenValid = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      try {\n        const session = await __CheckSession();\n        setCurrentUser(session);\n        setAuthenticated(true);\n\n        () => history.push('/main');\n      } catch (error) {\n        setCurrentUser(null);\n        setAuthenticated(false);\n        localStorage.clear();\n      }\n    }\n  };\n\n  const toggleAuthenticated = async (value, user, done) => {\n    setAuthenticated(value);\n    setCurrentUser(user);\n\n    () => done();\n  };\n\n  useEffect(() => {\n    verifyTokenValid();\n    setPageLoading(false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: pageLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        authenticated: authenticated,\n        path: \"/main\",\n        component: props => /*#__PURE__*/_jsxDEV(Main, { ...props,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"aE+zCIgnv9baO9OEn5MV8U82VKI=\");\n\n_c = Router;\nexport default _c2 = withRouter(Router);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/luis/Desktop/carnaProject/carna-project/client/src/components/Router.js"],"names":["React","useState","useEffect","useHistory","SignIn","Main","ProtectedRoute","__CheckSession","Router","currentUser","setCurrentUser","authenticated","setAuthenticated","pageLoading","setPageLoading","verifyTokenValid","token","localStorage","getItem","session","history","push","error","clear","toggleAuthenticated","value","user","done","props","withRouter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C,CAHiB,CAKjB;;AAEA,QAAMc,gBAAgB,GAAG,YAAY;AACjC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACP,UAAI;AACA,cAAMG,OAAO,GAAG,MAAMZ,cAAc,EAApC;AACAG,QAAAA,cAAc,CAACS,OAAD,CAAd;AACAP,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,cAAMQ,OAAO,CAACC,IAAR,CAAa,OAAb,CAAN;AACH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZZ,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAK,QAAAA,YAAY,CAACM,KAAb;AACH;AACJ;AACJ,GAdD;;AAgBA,QAAMC,mBAAmB,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,KAA6B;AACrDf,IAAAA,gBAAgB,CAACa,KAAD,CAAhB;AACAf,IAAAA,cAAc,CAACgB,IAAD,CAAd;;AACA,UAAMC,IAAI,EAAV;AACH,GAJD;;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,gBAAgB;AAChBD,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAHQ,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKD,WAAW,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAC,GAFT;AAGI,QAAA,SAAS,EAAE,mBACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,cAAD;AACI,QAAA,aAAa,EAAEF,aADnB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAGiB,KAAD,iBACP,QAAC,IAAD,OAAUA,KAAV;AAAiB,UAAA,WAAW,EAAEnB;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA1DD;;GAAMD,M;;KAAAA,M;AA4DN,qBAAeqB,UAAU,CAACrB,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport SignIn from '../Pages/SignIn';\nimport Main from '../Pages/Main';\nimport ProtectedRoute from './ProtectedRoute';\nimport { __CheckSession } from '../services/UserServices';\n\n\nconst Router = () => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [authenticated, setAuthenticated] = useState('');\n    const [pageLoading, setPageLoading] = useState(false);\n\n    // verify if the current token is valid \n\n    const verifyTokenValid = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            try {\n                const session = await __CheckSession();\n                setCurrentUser(session);\n                setAuthenticated(true);\n                () => history.push('/main');\n            } catch (error) {\n                setCurrentUser(null)\n                setAuthenticated(false);\n                localStorage.clear();\n            }\n        }\n    }\n\n    const toggleAuthenticated = async (value, user, done) => {\n        setAuthenticated(value);\n        setCurrentUser(user);\n        () => done();\n    }\n\n    useEffect(() => {\n        verifyTokenValid();\n        setPageLoading(false);\n    })\n\n    return (\n        <div className=\"main\">\n            {pageLoading ? (\n                <h3>Loading...</h3>\n            ) : (\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        component={() => (\n                            <SignIn />\n                        )}\n                    />\n                    <ProtectedRoute\n                        authenticated={authenticated}\n                        path=\"/main\"\n                        component={(props) => (\n                            <Main {...props} currentUser={currentUser} />\n                        )}\n                    />\n                </Switch>\n            )}\n        </div>\n    )\n}\n\nexport default withRouter(Router);"]},"metadata":{},"sourceType":"module"}