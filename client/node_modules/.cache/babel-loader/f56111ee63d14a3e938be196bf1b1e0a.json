{"ast":null,"code":"var noop = function () {};\n\nvar path = require('path');\n\nconst semver = require('semver');\n\nvar version = process.versions.node.split('.') || [null, null, null];\nconsole.log('this is the version:  ', version);\nvar utils = module.exports = {\n  semver: semver,\n  satisfies: test => semver.satisfies(process.versions.node, test),\n  version: {\n    major: parseInt(version[0] || 0, 10),\n    minor: parseInt(version[1] || 0, 10),\n    patch: parseInt(version[2] || 0, 10)\n  },\n  clone: require('./clone'),\n  merge: require('./merge'),\n  bus: require('./bus'),\n  isWindows: process.platform === 'win32',\n  isMac: process.platform === 'darwin',\n  isLinux: process.platform === 'linux',\n  isRequired: function () {\n    var p = module.parent;\n\n    while (p) {\n      // in electron.js engine it happens\n      if (!p.filename) {\n        return true;\n      }\n\n      if (p.filename.indexOf('bin' + path.sep + 'nodemon.js') !== -1) {\n        return false;\n      }\n\n      p = p.parent;\n    }\n\n    return true;\n  }(),\n  home: process.env.HOME || process.env.HOMEPATH,\n  quiet: function () {\n    // nukes the logging\n    if (!this.debug) {\n      for (var method in utils.log) {\n        if (typeof utils.log[method] === 'function') {\n          utils.log[method] = noop;\n        }\n      }\n    }\n  },\n  reset: function () {\n    if (!this.debug) {\n      for (var method in utils.log) {\n        if (typeof utils.log[method] === 'function') {\n          delete utils.log[method];\n        }\n      }\n    }\n\n    this.debug = false;\n  },\n  regexpToText: function (t) {\n    return t.replace(/\\.\\*\\\\./g, '*.').replace(/\\\\{2}/g, '^^').replace(/\\\\/g, '').replace(/\\^\\^/g, '\\\\');\n  },\n  stringify: function (exec, args) {\n    // serializes an executable string and array of arguments into a string\n    args = args || [];\n    return [exec].concat(args.map(function (arg) {\n      // if an argument contains a space, we want to show it with quotes\n      // around it to indicate that it is a single argument\n      if (arg.length > 0 && arg.indexOf(' ') === -1) {\n        return arg;\n      } // this should correctly escape nested quotes\n\n\n      return JSON.stringify(arg);\n    })).join(' ').trim();\n  }\n};\nutils.log = require('./log')(utils.isRequired);\nObject.defineProperty(utils, 'debug', {\n  set: function (value) {\n    this.log.debug = value;\n  },\n  get: function () {\n    return this.log.debug;\n  }\n});\nObject.defineProperty(utils, 'colours', {\n  set: function (value) {\n    this.log.useColours = value;\n  },\n  get: function () {\n    return this.log.useColours;\n  }\n});","map":{"version":3,"sources":["/Users/luis/Desktop/carnaProject/carna-project/node_modules/nodemon/lib/utils/index.js"],"names":["noop","path","require","semver","version","process","versions","node","split","console","log","utils","module","exports","satisfies","test","major","parseInt","minor","patch","clone","merge","bus","isWindows","platform","isMac","isLinux","isRequired","p","parent","filename","indexOf","sep","home","env","HOME","HOMEPATH","quiet","debug","method","reset","regexpToText","t","replace","stringify","exec","args","concat","map","arg","length","JSON","join","trim","Object","defineProperty","set","value","get","useColours"],"mappings":"AAAA,IAAIA,IAAI,GAAG,YAAY,CAAG,CAA1B;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAIE,OAAO,GAAGC,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBC,KAAtB,CAA4B,GAA5B,KAAoC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAlD;AACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,OAAtC;AACA,IAAIO,KAAK,GAAIC,MAAM,CAACC,OAAP,GAAiB;AAC5BV,EAAAA,MAAM,EAAEA,MADoB;AAE5BW,EAAAA,SAAS,EAAEC,IAAI,IAAIZ,MAAM,CAACW,SAAP,CAAiBT,OAAO,CAACC,QAAR,CAAiBC,IAAlC,EAAwCQ,IAAxC,CAFS;AAG5BX,EAAAA,OAAO,EAAE;AACPY,IAAAA,KAAK,EAAEC,QAAQ,CAACb,OAAO,CAAC,CAAD,CAAP,IAAc,CAAf,EAAkB,EAAlB,CADR;AAEPc,IAAAA,KAAK,EAAED,QAAQ,CAACb,OAAO,CAAC,CAAD,CAAP,IAAc,CAAf,EAAkB,EAAlB,CAFR;AAGPe,IAAAA,KAAK,EAAEF,QAAQ,CAACb,OAAO,CAAC,CAAD,CAAP,IAAc,CAAf,EAAkB,EAAlB;AAHR,GAHmB;AAQ5BgB,EAAAA,KAAK,EAAElB,OAAO,CAAC,SAAD,CARc;AAS5BmB,EAAAA,KAAK,EAAEnB,OAAO,CAAC,SAAD,CATc;AAU5BoB,EAAAA,GAAG,EAAEpB,OAAO,CAAC,OAAD,CAVgB;AAW5BqB,EAAAA,SAAS,EAAElB,OAAO,CAACmB,QAAR,KAAqB,OAXJ;AAY5BC,EAAAA,KAAK,EAAEpB,OAAO,CAACmB,QAAR,KAAqB,QAZA;AAa5BE,EAAAA,OAAO,EAAErB,OAAO,CAACmB,QAAR,KAAqB,OAbF;AAc5BG,EAAAA,UAAU,EAAG,YAAY;AACvB,QAAIC,CAAC,GAAGhB,MAAM,CAACiB,MAAf;;AACA,WAAOD,CAAP,EAAU;AACR;AACA,UAAI,CAACA,CAAC,CAACE,QAAP,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,UAAIF,CAAC,CAACE,QAAF,CAAWC,OAAX,CAAmB,QAAQ9B,IAAI,CAAC+B,GAAb,GAAmB,YAAtC,MAAwD,CAAC,CAA7D,EAAgE;AAC9D,eAAO,KAAP;AACD;;AACDJ,MAAAA,CAAC,GAAGA,CAAC,CAACC,MAAN;AACD;;AAED,WAAO,IAAP;AACD,GAdW,EAdgB;AA6B5BI,EAAAA,IAAI,EAAE5B,OAAO,CAAC6B,GAAR,CAAYC,IAAZ,IAAoB9B,OAAO,CAAC6B,GAAR,CAAYE,QA7BV;AA8B5BC,EAAAA,KAAK,EAAE,YAAY;AACjB;AACA,QAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,WAAK,IAAIC,MAAT,IAAmB5B,KAAK,CAACD,GAAzB,EAA8B;AAC5B,YAAI,OAAOC,KAAK,CAACD,GAAN,CAAU6B,MAAV,CAAP,KAA6B,UAAjC,EAA6C;AAC3C5B,UAAAA,KAAK,CAACD,GAAN,CAAU6B,MAAV,IAAoBvC,IAApB;AACD;AACF;AACF;AACF,GAvC2B;AAwC5BwC,EAAAA,KAAK,EAAE,YAAY;AACjB,QAAI,CAAC,KAAKF,KAAV,EAAiB;AACf,WAAK,IAAIC,MAAT,IAAmB5B,KAAK,CAACD,GAAzB,EAA8B;AAC5B,YAAI,OAAOC,KAAK,CAACD,GAAN,CAAU6B,MAAV,CAAP,KAA6B,UAAjC,EAA6C;AAC3C,iBAAO5B,KAAK,CAACD,GAAN,CAAU6B,MAAV,CAAP;AACD;AACF;AACF;;AACD,SAAKD,KAAL,GAAa,KAAb;AACD,GAjD2B;AAkD5BG,EAAAA,YAAY,EAAE,UAAUC,CAAV,EAAa;AACzB,WAAOA,CAAC,CACLC,OADI,CACI,UADJ,EACgB,IADhB,EAEJA,OAFI,CAEI,QAFJ,EAEc,IAFd,EAGJA,OAHI,CAGI,KAHJ,EAGW,EAHX,EAIJA,OAJI,CAII,OAJJ,EAIa,IAJb,CAAP;AAKD,GAxD2B;AAyD5BC,EAAAA,SAAS,EAAE,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC/B;AACAA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,WAAO,CAACD,IAAD,EACJE,MADI,CAELD,IAAI,CAACE,GAAL,CAAS,UAAUC,GAAV,EAAe;AACtB;AACA;AACA,UAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkBD,GAAG,CAAClB,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA5C,EAA+C;AAC7C,eAAOkB,GAAP;AACD,OALqB,CAMtB;;;AACA,aAAOE,IAAI,CAACP,SAAL,CAAeK,GAAf,CAAP;AACD,KARD,CAFK,EAYJG,IAZI,CAYC,GAZD,EAaJC,IAbI,EAAP;AAcD;AA3E2B,CAA9B;AA8EA1C,KAAK,CAACD,GAAN,GAAYR,OAAO,CAAC,OAAD,CAAP,CAAiBS,KAAK,CAACgB,UAAvB,CAAZ;AAEA2B,MAAM,CAACC,cAAP,CAAsB5C,KAAtB,EAA6B,OAA7B,EAAsC;AACpC6C,EAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AACpB,SAAK/C,GAAL,CAAS4B,KAAT,GAAiBmB,KAAjB;AACD,GAHmC;AAIpCC,EAAAA,GAAG,EAAE,YAAY;AACf,WAAO,KAAKhD,GAAL,CAAS4B,KAAhB;AACD;AANmC,CAAtC;AASAgB,MAAM,CAACC,cAAP,CAAsB5C,KAAtB,EAA6B,SAA7B,EAAwC;AACtC6C,EAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AACpB,SAAK/C,GAAL,CAASiD,UAAT,GAAsBF,KAAtB;AACD,GAHqC;AAItCC,EAAAA,GAAG,EAAE,YAAY;AACf,WAAO,KAAKhD,GAAL,CAASiD,UAAhB;AACD;AANqC,CAAxC","sourcesContent":["var noop = function () { };\nvar path = require('path');\nconst semver = require('semver');\nvar version = process.versions.node.split('.') || [null, null, null];\nconsole.log('this is the version:  ', version);\nvar utils = (module.exports = {\n  semver: semver,\n  satisfies: test => semver.satisfies(process.versions.node, test),\n  version: {\n    major: parseInt(version[0] || 0, 10),\n    minor: parseInt(version[1] || 0, 10),\n    patch: parseInt(version[2] || 0, 10),\n  },\n  clone: require('./clone'),\n  merge: require('./merge'),\n  bus: require('./bus'),\n  isWindows: process.platform === 'win32',\n  isMac: process.platform === 'darwin',\n  isLinux: process.platform === 'linux',\n  isRequired: (function () {\n    var p = module.parent;\n    while (p) {\n      // in electron.js engine it happens\n      if (!p.filename) {\n        return true;\n      }\n      if (p.filename.indexOf('bin' + path.sep + 'nodemon.js') !== -1) {\n        return false;\n      }\n      p = p.parent;\n    }\n\n    return true;\n  })(),\n  home: process.env.HOME || process.env.HOMEPATH,\n  quiet: function () {\n    // nukes the logging\n    if (!this.debug) {\n      for (var method in utils.log) {\n        if (typeof utils.log[method] === 'function') {\n          utils.log[method] = noop;\n        }\n      }\n    }\n  },\n  reset: function () {\n    if (!this.debug) {\n      for (var method in utils.log) {\n        if (typeof utils.log[method] === 'function') {\n          delete utils.log[method];\n        }\n      }\n    }\n    this.debug = false;\n  },\n  regexpToText: function (t) {\n    return t\n      .replace(/\\.\\*\\\\./g, '*.')\n      .replace(/\\\\{2}/g, '^^')\n      .replace(/\\\\/g, '')\n      .replace(/\\^\\^/g, '\\\\');\n  },\n  stringify: function (exec, args) {\n    // serializes an executable string and array of arguments into a string\n    args = args || [];\n\n    return [exec]\n      .concat(\n      args.map(function (arg) {\n        // if an argument contains a space, we want to show it with quotes\n        // around it to indicate that it is a single argument\n        if (arg.length > 0 && arg.indexOf(' ') === -1) {\n          return arg;\n        }\n        // this should correctly escape nested quotes\n        return JSON.stringify(arg);\n      })\n      )\n      .join(' ')\n      .trim();\n  },\n});\n\nutils.log = require('./log')(utils.isRequired);\n\nObject.defineProperty(utils, 'debug', {\n  set: function (value) {\n    this.log.debug = value;\n  },\n  get: function () {\n    return this.log.debug;\n  },\n});\n\nObject.defineProperty(utils, 'colours', {\n  set: function (value) {\n    this.log.useColours = value;\n  },\n  get: function () {\n    return this.log.useColours;\n  },\n});\n"]},"metadata":{},"sourceType":"script"}